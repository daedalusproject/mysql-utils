stages:
    - linter
    - set_test_environment
    - test
    - set_coverage_environment
    - coverage
    - clean
    - package
    - update_repo

linter:
    image: daedalusproject/base_bash_utils:latest
    stage: linter
    script:
        - shellcheck --exclude=SC2086 --exclude=SC2034 lib/*.sh

deploy_databse:
    image: daedalusproject/base_kubectl:201905041029
    stage: set_test_environment
    script:
        - declare -a -g REQUIRED_VARIABLES
        - REQUIRED_VARIABLES=( 'KUBERNETES_URL' 'KUBERNETES_USER_NAME' 'KUBERNETES_USER_TOKEN')
        - source utils/create_environment.sh
        - create_kube_config
        - delete_configs
        - create_configs

unit_tests:
    image: daedalusproject/base_bash_utils:latest
    stage: test
    before_script:
        - sudo apt-get update
        - sudo apt-get install -y percona-server-client
    script:
        - make test

deploy_databse_for_coverage:
    image: daedalusproject/base_kubectl:201905041029
    stage: set_coverage_environment
    script:
        - declare -a -g REQUIRED_VARIABLES
        - REQUIRED_VARIABLES=( 'KUBERNETES_URL' 'KUBERNETES_USER_NAME' 'KUBERNETES_USER_TOKEN')
        - source utils/create_environment.sh
        - create_kube_config
        - delete_configs
        - create_configs

cover:
    image: daedalusproject/base_bash_utils:latest
    stage: coverage
    before_script:
        - sudo apt-get update
        - sudo apt-get install -y percona-server-client
    script:
        - make cover
    coverage: /Coverage:\ (\d+\.\d+?)%$/
    artifacts:
        paths:
        - coverage
        expire_in: 15 minutes

clean_namespace:
    image: daedalusproject/base_kubectl:201905041029
    stage: clean
    script:
        - declare -a -g REQUIRED_VARIABLES
        - REQUIRED_VARIABLES=( 'KUBERNETES_URL' 'KUBERNETES_USER_NAME' 'KUBERNETES_USER_TOKEN')
        - source utils/create_environment.sh
        - create_kube_config
        - delete_configs

create_deb_package:
    image: daedalusproject/base_deb_builder:201905041029
    stage: package
    script:
        - DEB_BUILD_OPTIONS=nocheck dpkg-buildpackage -uc -b
        - mkdir package
        - mv ../daedalus-project-mysql-utils*.deb package/
    artifacts:
        paths:
        - package
        expire_in: 15 minutes

upload_package_to_develop_repo:
    stage: update_repo
    image: daedalusproject/base_curl:201904300501
    script:
        - SNAPSHOTDATE=$(date +%G%m%d%k%M%S)
        - PACKAGE=$(ls package)
        - curl -X POST -F file=@package/$PACKAGE http://repo.daedalus-project.io:8000/api/files/mysql-utils-testing || exit 1
        - curl -X POST http://repo.daedalus-project.io:8000/api/repos/daedalus-project-testing/file/mysql-utils-testing || exit 1
        - "curl -X PUT -H 'Content-Type: application/json' http://repo.daedalus-project.io:8000/api/publish/:./bionic || exit 1"
    artifacts:
        paths:
        - package
        expire_in: 5 minutes
    dependencies:
    - create_deb_package
    only:
    - develop

upload_package_to_repo:
    stage: update_repo
    image: daedalusproject/base_curl:201904300501
    script:
        - SNAPSHOTDATE=$(date +%G%m%d%k%M%S)
        - PACKAGE=$(ls package)
        - curl -X POST -F file=@package/$PACKAGE http://repo.daedalus-project.io:8000/api/files/mysql-utils || exit 1
        - curl -X POST http://repo.daedalus-project.io:8000/api/repos/daedalus-project/file/mysql-utils || exit 1
        - "curl -X PUT -H 'Content-Type: application/json' http://repo.daedalus-project.io:8000/api/publish/:./bionic || exit 1"
    artifacts:
        paths:
        - package
        expire_in: 15 minutes
    dependencies:
    - create_deb_package
    only:
    - /^v-.*$/
